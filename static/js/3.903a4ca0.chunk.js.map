{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsForm.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateProfileStatus","ProfileInfo","profile","Preloader","className","s","description","photos","large","small","src","lookingForAJob","aboutMe","maxLength10","MaxLengthCreator","PostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","name","component","Textarea","placeholder","NewPostsForm","values","addPost","newPostText","Post","item","message","likesCount","MyPosts","postsElements","posts","map","post","console","log","postsBlock","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","match","params","authorizedUserID","history","push","getUserProfile","getProfileStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.903a4ca0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nlet withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3gNlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2MXHX\",\"posts\":\"MyPosts_posts__22NNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2NvAm\"};","import React from 'react'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    disableEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateProfileStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log('DidUpdate')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activeEditMode}>{this.props.status || 'No Status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.disableEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, { useEffect, useState } from 'react'\r\n\r\nlet ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let disableEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activeEditMode}>{props.status || 'No Status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={disableEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if (props.profile === null) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n\r\n    <div>\r\n      <div className={s.description}>\r\n        {!props.profile.photos.large && !props.profile.photos.small\r\n          ? <Preloader />\r\n          : <img src={props.profile.photos.large} />}\r\n        <div>\r\n          {props.profile.lookingForAJob\r\n            ? <span>Уже работаю:)</span>\r\n            : <span>Ищю Работу!!!!</span>}\r\n        </div>\r\n        <span>{props.profile.aboutMe}</span>\r\n        <div>\r\n          <ProfileStatusWithHooks status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { MaxLengthCreator, required } from '../../../UTILS/VALIDATORS/Validators'\r\nimport { Textarea } from '../../Common/FormControls/FormControls'\r\n\r\n\r\nconst maxLength10 = MaxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength10]} name='newPostText' component={Textarea} placeholder='Enter Post' />\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostsReduxForm = reduxForm({ form: 'myPostsForm' })(AddNewPostForm)\r\n\r\nconst NewPostsForm = (props) => {\r\n    let onSubmit = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <PostsReduxForm onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default NewPostsForm\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDzaMc-3F_Ey437EAdp97a4dPrHCI9HI33nA&usqp=CAU\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport NewPostsForm from './MyPostsForm';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = props => {\r\n\r\n  let postsElements = props.posts.map(post => <Post message={post.message} likesCount={post.likesCount} />)\r\n\r\n  console.log('Render YO')\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <div>\r\n          <NewPostsForm addPost={props.addPost} />\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n      <MyPostsContainer />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getProfileStatus, getUserProfile, updateProfileStatus } from '../../redux/profile-reducer';\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) {\r\n      userID = this.props.authorizedUserID;\r\n      if (!userID) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userID)\r\n    this.props.getProfileStatus(userID)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n        updateProfileStatus={this.props.updateProfileStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userID\r\n  }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getProfileStatus, updateProfileStatus }), withRouter)(ProfileContainer)"],"sourceRoot":""}