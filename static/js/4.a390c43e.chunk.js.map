{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsСontainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogs","active","to","name","Message","message","maxLength50","MaxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","NewMessageForm","values","addMessage","newMessageText","Dialogs","state","dialogPage","dialogsElements","map","d","messagesElements","messages","m","dialogsItems","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kHCcpMC,EAXI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,qBAAKC,UAAWC,IAAEC,QAAU,IAAMD,IAAEE,OAApC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCCjBC,EANC,SAACT,GACf,OACE,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,iCCDhCC,EAAcC,YAAiB,IASjCC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAPL,SAACd,GACf,OAAQ,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACJ,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUT,GAAcH,KAAM,iBAAkBa,UAAWC,IAAUC,YAAY,uBACnG,+CAgBOC,EATQ,SAACxB,GAIpB,OACI,cAACa,EAAD,CAAkBG,SAJP,SAACS,GACZzB,EAAM0B,WAAWD,EAAOE,oBCUjBC,EAtBC,SAAC5B,GAEf,IAAI6B,EAAQ7B,EAAM8B,WAEdC,EAAkBF,EAAMxB,QAAQ2B,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAMN,GAAI+B,EAAE/B,QACzEgC,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,aAEnE,OACE,sBAAKP,UAAWC,IAAEC,QAAlB,UACE,qBAAKF,UAAWC,IAAEiC,aAAlB,SACGN,IAEH,qBAAK5B,UAAWC,IAAE+B,SAAlB,SACGD,IAEH,8BACE,cAAC,EAAD,CAAgBR,WAAY1B,EAAM0B,mBCF3BY,sBAAQC,aAdD,SAACV,GACrB,MAAO,CACLC,WAAYD,EAAMC,eAIG,SAACU,GACxB,MAAO,CACLd,WAAY,SAACC,GACXa,EAASC,YAAwBd,SAK8Be,IAAtDJ,CAAwEV","file":"static/js/4.a390c43e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3U1Vx\",\"dialogsItems\":\"Dialogs_dialogsItems__3-_4e\",\"dialog\":\"Dialogs_dialog__2lMbb\",\"active\":\"Dialogs_active___CUzr\",\"messages\":\"Dialogs_messages__2tUyc\",\"message\":\"Dialogs_message__1BJ4g\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialogs + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { MaxLengthCreator, required } from '../../UTILS/VALIDATORS/Validators'\r\nimport { Textarea } from '../Common/FormControls/FormControls'\r\n\r\nconst maxLength50 = MaxLengthCreator(50);\r\n\r\nlet DialogsForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field validate={[required, maxLength50]} name={'newMessageText'} component={Textarea} placeholder='Enter Your Message'/>\r\n        <button>Add</button>\r\n    </form>)\r\n}\r\n\r\nlet DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsForm)\r\n\r\n\r\nconst NewMessageForm = (props) => {\r\n    let onSubmit = (values) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n    return (\r\n        <DialogsReduxForm onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default NewMessageForm\r\n\r\n{/* <textarea onChange={onMessageChange} ref={newElement} value={state.newMessageText}></textarea>\r\n<button onClick={showElement}>Добавить</button> */}","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport s from './Dialogs.module.css';\r\nimport NewMessageForm from './DialogsForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogPage\r\n\r\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n  let messagesElements = state.messages.map(m => <Message message={m.message} />);\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <div>\r\n        <NewMessageForm addMessage={props.addMessage}/>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../../redux/dialog-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogPage: state.dialogPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    },\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}