{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsForm.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateProfileStatus","ProfileDataFormReduxForm","reduxForm","form","onSubmit","handleSubmit","error","className","styles","stobSubmitForm","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","s","contact","Contact","contactTitle","contactValue","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","Preloader","description","photos","large","small","src","userPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","maxLength10","MaxLengthCreator","PostsReduxForm","Field","validate","required","name","component","placeholder","NewPostsForm","values","addPost","newPostText","Post","item","message","likesCount","MyPosts","postsElements","posts","post","id","postsBlock","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userID","this","match","params","authorizedUserID","history","push","getUserProfile","getProfileStatus","refreshProfile","prevProps","prevState","compose","auth","withRouter"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,+B,oBCA3ED,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,oJCwCVC,GCvCaC,IAAMC,UDAL,SAACC,GAAW,IAAD,EAENC,oBAAS,GAFH,mBAE/BC,EAF+B,KAErBC,EAFqB,OAGVF,mBAASD,EAAMI,QAHL,mBAG/BA,EAH+B,KAGvBC,EAHuB,KAKpCC,qBAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAeV,OACI,iCACMF,GACE,gCACI,wCAAc,sBAAMK,cAjBf,WACjBJ,GAAY,IAgBc,SAAsCH,EAAMI,QAAU,iBAG3EF,GACG,8BACI,uBAAOM,SAbF,SAACC,GAClBJ,EAAUI,EAAEC,cAAcC,QAYmBC,WAAW,EAAMC,OAlB5C,WAClBV,GAAY,GACZH,EAAMc,oBAAoBV,IAgB6DO,MAAOP,W,2CEMvFW,EAFgBC,YAAU,CAAEC,KAAM,gBAAlBD,EA9BT,SAAChB,GACnB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,4CAEHnB,EAAMoB,OAAS,qBAAKC,UAAWC,IAAOC,eAAvB,SAAwCvB,EAAMoB,QAC9D,gCACI,0CADJ,KACuBI,YAAY,GAAI,WAAY,YAAaC,QAEhE,gCACI,kDADJ,KAC+BD,YAAY,GAAI,iBAAkB,GAAIC,IAAO,CAAEC,KAAM,gBAEpF,gCACI,uDADJ,KACoCF,YAAY,GAAI,4BAA6B,yBAA0BG,QAE3G,gCACI,yCADJ,KACsBH,YAAY,GAAI,UAAW,WAAYG,QAE7D,gCACI,yCADJ,IACqBC,OAAOC,KAAK7B,EAAM8B,QAAQC,UAAUC,KAAI,SAAAC,GACrD,OAAO,qBAAeZ,UAAWa,IAAEC,QAA5B,SACH,8BAAIF,EAAJ,KAAWT,YAAY,GAAI,YAAcS,EAAKA,EAAKR,SADtCQ,eCmBjCG,EAAU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC7B,OAAO,sBAAKjB,UAAWa,IAAEC,QAAlB,UACL,4BAAIE,IADC,KACmBC,MAIxBC,EAAc,SAACvC,GACjB,OACE,gCACE,8BACEA,EAAMwC,SAAW,8BAAK,wBAAQC,QAASzC,EAAM0C,aAAvB,sBACxB,gCACE,0CADF,KACqB1C,EAAM8B,QAAQa,YAEnC,gCACE,kDADF,KAC6B3C,EAAM8B,QAAQc,eAAiB,MAAQ,QAGlE5C,EAAM8B,QAAQc,gBACd,gCACE,uDADF,KACkC5C,EAAM8B,QAAQe,6BAGlD,8BACE,+BAAO7C,EAAM8B,QAAQgB,YAEvB,gCACE,yCADF,IACmBlB,OAAOC,KAAK7B,EAAM8B,QAAQC,UAAUC,KAAI,SAAAC,GACvD,OAAO,cAAC,EAAD,CACLI,aAAcJ,EACdK,aAActC,EAAM8B,QAAQC,SAASE,IAFlBA,aAUhBc,EA7EK,SAAC/C,GAAW,IAAD,EAECC,oBAAS,GAFV,mBAExBC,EAFwB,KAEdC,EAFc,KAI7B,GAAsB,OAAlBH,EAAM8B,QACR,OAAO,cAACkB,EAAA,EAAD,IAiBT,OACE,8BACE,sBAAK3B,UAAWa,IAAEe,YAAlB,UACIjD,EAAM8B,QAAQoB,OAAOC,OAAUnD,EAAM8B,QAAQoB,OAAOE,MAElD,qBAAKC,IAAKrD,EAAM8B,QAAQoB,OAAOC,QAD/B,qBAAKE,IAAKC,MAGbtD,EAAMwC,SAAW,uBAAOhC,SArBL,SAACC,GACrBA,EAAE8C,OAAOC,MAAMC,QACjBzD,EAAM0D,UAAUjD,EAAE8C,OAAOC,MAAM,KAmB2B9B,KAAK,SAE5DxB,EAAW,cAAC,EAAD,CAAiByD,cAAe3D,EAAM8B,QAASZ,SAjBhD,SAAC0C,GAChB5D,EAAM6D,YAAYD,GAAUE,MAC1B,WACE3D,GAAY,OAcmE2B,QAAS9B,EAAM8B,UAAc,cAAC,EAAD,CAAaU,QAASxC,EAAMwC,QAASE,aAAc,WAAQvC,GAAY,IAAS2B,QAAS9B,EAAM8B,UAE3M,cAAC,EAAD,CAAwB1B,OAAQJ,EAAMI,OAAQU,oBAAqBd,EAAMc,4B,0CCnC3EiD,EAAcC,YAAiB,IAajCC,EAAiBjD,YAAU,CAAEC,KAAM,eAAlBD,EAXA,SAAChB,GAClB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,cAAC+C,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUL,GAAcM,KAAK,cAAcC,UAAW3C,IAAU4C,YAAY,eAC9F,8BACI,sDAiBDC,EATM,SAACxE,GAIlB,OACI,cAACiE,EAAD,CAAgB/C,SAJL,SAACuD,GACZzE,EAAM0E,QAAQD,EAAOE,iB,kBCRdC,EAZF,SAAC5E,GACZ,OACE,sBAAKqB,UAAWa,IAAE2C,KAAlB,UACE,qBAAKxB,IAAI,wGACRrD,EAAM8E,QACP,8BACE,yCAAY9E,EAAM+E,oBCeXC,EAnBC,SAAAhF,GAEd,IAAIiF,EAAgBjF,EAAMkF,MAAMlD,KAAI,SAAAmD,GAAI,OAAI,cAAC,EAAD,CAAoBL,QAASK,EAAKL,QAASC,WAAYI,EAAKJ,YAAjDI,EAAKC,OAE5D,OACE,sBAAK/D,UAAWa,IAAEmD,WAAlB,UACE,0CACA,8BACE,8BACE,cAAC,EAAD,CAAcX,QAAS1E,EAAM0E,cAGjC,qBAAKrD,UAAWa,IAAEgD,MAAlB,SACGD,QCIMK,EAFUC,aAfD,SAACC,GACvB,MAAO,CACLN,MAAOM,EAAMC,YAAYP,MACzBP,YAAaa,EAAMC,YAAYd,gBAIR,SAACe,GAC1B,MAAO,CACLhB,QAAS,SAACC,GACRe,EAASC,YAAqBhB,QAKXY,CAA6CP,GCDvDY,EAfC,SAAC5F,GACf,OACE,gCACE,cAAC,EAAD,CACE6D,YAAa7D,EAAM6D,YACnBH,UAAW1D,EAAM0D,UACjBlB,QAASxC,EAAMwC,QACfV,QAAS9B,EAAM8B,QACf1B,OAAQJ,EAAMI,OACdU,oBAAqBd,EAAMc,sBAC7B,cAAC,EAAD,Q,gBCPA+E,E,+KAGF,IAAIC,EAASC,KAAK/F,MAAMgG,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAK/F,MAAMkG,mBAElBH,KAAK/F,MAAMmG,QAAQC,KAAK,UAG5BL,KAAK/F,MAAMqG,eAAeP,GAC1BC,KAAK/F,MAAMsG,iBAAiBR,K,0CAI5BC,KAAKQ,mB,yCAGYC,EAAWC,GACxBV,KAAK/F,MAAMgG,MAAMC,OAAOH,QAAUU,EAAUR,MAAMC,OAAOH,QAC3DC,KAAKQ,mB,+BAKP,OACE,cAAC,EAAD,2BAAaR,KAAK/F,OAAlB,IACE0D,UAAWqC,KAAK/F,MAAM0D,UACtBlB,SAAUuD,KAAK/F,MAAMgG,MAAMC,OAAOH,OAClChE,QAASiE,KAAK/F,MAAM8B,QACpB1B,OAAQ2F,KAAK/F,MAAMI,OACnBU,oBAAqBiF,KAAK/F,MAAMc,2B,GA/BThB,IAAMC,WA8CtB2G,sBAAQnB,aATD,SAACC,GACrB,MAAO,CACL1D,QAAS0D,EAAMC,YAAY3D,QAC3B1B,OAAQoF,EAAMC,YAAYrF,OAC1B8F,iBAAkBV,EAAMmB,KAAKb,UAKe,CAAEO,mBAAgBC,qBAAkBxF,wBAAqB4C,cAAWG,kBAAgB+C,IAArHF,CAAiIb","file":"static/js/3.64e0be8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__3gNlz\",\"contact\":\"ProfileInfo_contact__JtsJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2MXHX\",\"posts\":\"MyPosts_posts__22NNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2NvAm\"};","import React, { useEffect, useState } from 'react'\r\n\r\nlet ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    let activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let disableEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status:</b><span onDoubleClick={activeEditMode}>{props.status || 'No Status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={disableEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    disableEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateProfileStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n        console.log('DidUpdate')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activeEditMode}>{this.props.status || 'No Status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.disableEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from '../../Common/FormControls/FormControls';\r\nimport styles from '../../Common/FormControls/FormControls.module.css'\r\n\r\n\r\nlet ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            {props.error && <div className={styles.stobSubmitForm}>{props.error}</div>}\r\n            <div>\r\n                <b>Full name</b>: {createField([], 'fullName', \"Full Name\", Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField([], 'lookingForAJob', \"\", Input, { type: 'checkbox' })}\r\n            </div>\r\n            <div>\r\n                <b>My Proffesional skills</b>: {createField([], 'lookingForAJobDescription', 'My Proffesional skills', Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {createField([], 'aboutMe', 'About Me', Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>:{Object.keys(props.profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}: {createField([], 'contacts.' + key, key, Input)}</b>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/avatar.png'\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (props.profile === null) {\r\n    return <Preloader />\r\n  }\r\n\r\n  let onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.description}>\r\n        {!props.profile.photos.large && !props.profile.photos.small\r\n          ? <img src={userPhoto} />\r\n          : <img src={props.profile.photos.large} />}\r\n\r\n        {props.isOwner && <input onChange={onMainPhotoSelected} type='file' />}\r\n\r\n        {editMode ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile} /> : <ProfileData isOwner={props.isOwner} goToEditMode={() => { setEditMode(true) }} profile={props.profile} />}\r\n\r\n        <ProfileStatusWithHooks status={props.status} updateProfileStatus={props.updateProfileStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}>\r\n    <b>{contactTitle}</b>: {contactValue}\r\n  </div>\r\n}\r\n\r\nlet ProfileData = (props) => {\r\n  return (\r\n    <div>\r\n      <div>{\r\n        props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}</div>\r\n      <div>\r\n        <b>Full name</b>: {props.profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {\r\n        props.profile.lookingForAJob &&\r\n        <div>\r\n          <b>My Proffesional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <span>{props.profile.aboutMe}</span>\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{Object.keys(props.profile.contacts).map(key => {\r\n          return <Contact key={key}\r\n            contactTitle={key}\r\n            contactValue={props.profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { MaxLengthCreator, required } from '../../../UTILS/VALIDATORS/Validators'\r\nimport { Textarea } from '../../Common/FormControls/FormControls'\r\n\r\n\r\nconst maxLength10 = MaxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength10]} name='newPostText' component={Textarea} placeholder='Enter Post' />\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostsReduxForm = reduxForm({ form: 'myPostsForm' })(AddNewPostForm)\r\n\r\nconst NewPostsForm = (props) => {\r\n    let onSubmit = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <PostsReduxForm onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default NewPostsForm\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDzaMc-3F_Ey437EAdp97a4dPrHCI9HI33nA&usqp=CAU\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport NewPostsForm from './MyPostsForm';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = props => {\r\n\r\n  let postsElements = props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount} />)\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <div>\r\n        <div>\r\n          <NewPostsForm addPost={props.addPost} />\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        saveProfile={props.saveProfile}\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateProfileStatus={props.updateProfileStatus} />\r\n      <MyPostsContainer />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getProfileStatus, getUserProfile, savePhoto, saveProfile, updateProfileStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) {\r\n      userID = this.props.authorizedUserID;\r\n      if (!userID) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userID)\r\n    this.props.getProfileStatus(userID)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userID != prevProps.match.params.userID) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        savePhoto={this.props.savePhoto}\r\n        isOwner={!this.props.match.params.userID}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateProfileStatus={this.props.updateProfileStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userID\r\n  }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getProfileStatus, updateProfileStatus, savePhoto, saveProfile }), withRouter)(ProfileContainer)"],"sourceRoot":""}